name: release-solution-to-prod-reusable
# Reusable workflow
# convert solution to managed (using a build PowerPlatform environment for the conversion)
# upload the solution to the GitHub artifacts and deploy to the PROD environment
on:
  workflow_call:
    inputs: 
      #Do Not change these values
      #Values are set by the caller
      #caller sample: release-action-call.ymnl
      solution_name:
        description: 'The solution name.'
        type: string
        default: ALMLab       
      solution_shipping_folder:
        description: 'folder name for staging the exported solution *do not change*'        
        type: string
        default: out/ship/
      solution_outbound_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        type: string
        default: out/solutions/
      solution_source_folder: 
       description: 'folder name to be created and checked in *do not change*'
       type: string
       default: solutions/
      solution_release_folder:
       description: 'folder where the released binaries are going to be hosted *do not change*'
       type: string
       default: out/release
      BUILD_ENVIRONMENT_URL:
        description: 'Build environment url.'
        type: string
        required: true      
      PRODUCTION_ENVIRONMENT_URL: 
        description: 'Production environment url.'
        type: string
        required: true
      CLIENT_ID: 
        description: 'The client id'
        type: string
        required: true
      TENANT_ID: 
        description: 'The tenant id'
        type: string
        required: true
    secrets:
      envSecret:
        description: 'The secret value for authentication using SPN'
        required: true

jobs:
  convert-to-managed:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Pack solution
      uses: microsoft/powerplatform-actions/pack-solution@v0
      with:
        solution-folder: solutions/ALMLab
        solution-file: out/solutions/ALMLab.zip
        solution-type: Unmanaged

    - name: Import solution as unmanaged to build env
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: 'https://orged306eb3.crm8.dynamics.com/'
        app-id: 'eea2237f-9cf4-43d5-8d31-7adec3760a63'
        client-secret: 'qVd8Q~NeU~dAjORNcPOXwXd52ls2NGxHFEeONdA5'
        tenant-id: '3d90fb9c-95a2-4ed8-be40-9806698b91b9'
        solution-file: out/solutions/ALMLab.zip
        force-overwrite: true
        publish-changes: true

    - name: Export solution as managed
      uses: microsoft/powerplatform-actions/export-solution@v0
      with:
        environment-url: 'https://orged306eb3.crm8.dynamics.com/'
        app-id: 'eea2237f-9cf4-43d5-8d31-7adec3760a63'
        client-secret: 'qVd8Q~NeU~dAjORNcPOXwXd52ls2NGxHFEeONdA5'
        tenant-id: '3d90fb9c-95a2-4ed8-be40-9806698b91b9'
        solution-name: nkd
        managed: true
        solution-output-file: out/ship/ALMLab.zip

    - name: Upload the ready to ship solution to GH artifact store
      uses: actions/upload-artifact@v2
      with:
        name: managedSolutions
        path: out/release/

  release-to-staging:
    needs: [ convert-to-managed ]
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Fetch the ready to ship solution from GH artifact store
      uses: actions/download-artifact@v2
      with:
        name: managedSolutions
        path: out/release/
    - name: Import solution to prod env
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: 'https://orged306eb3.crm8.dynamics.com/'
        app-id: 'eea2237f-9cf4-43d5-8d31-7adec3760a63'
        client-secret: 'qVd8Q~NeU~dAjORNcPOXwXd52ls2NGxHFEeONdA5'
        tenant-id: '3d90fb9c-95a2-4ed8-be40-9806698b91b9'
        solution-file: out/release/ALMLab.zip
        force-overwrite: true
        publish-changes: true
